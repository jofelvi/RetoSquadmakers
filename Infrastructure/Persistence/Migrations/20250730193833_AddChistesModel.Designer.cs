// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using retoSquadmakers.Infrastructure.Persistence;

#nullable disable

namespace retoSquadmakers.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250730193833_AddChistesModel")]
    partial class AddChistesModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("retoSquadmakers.Models.Chiste", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AutorId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Origen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.ToTable("Chistes");
                });

            modelBuilder.Entity("retoSquadmakers.Models.ChisteTematica", b =>
                {
                    b.Property<int>("ChisteId")
                        .HasColumnType("integer");

                    b.Property<int>("TematicaId")
                        .HasColumnType("integer");

                    b.HasKey("ChisteId", "TematicaId");

                    b.HasIndex("TematicaId");

                    b.ToTable("ChisteTematicas");
                });

            modelBuilder.Entity("retoSquadmakers.Models.Tematica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Tematicas");
                });

            modelBuilder.Entity("retoSquadmakers.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("retoSquadmakers.Models.Chiste", b =>
                {
                    b.HasOne("retoSquadmakers.Models.Usuario", "Autor")
                        .WithMany("Chistes")
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");
                });

            modelBuilder.Entity("retoSquadmakers.Models.ChisteTematica", b =>
                {
                    b.HasOne("retoSquadmakers.Models.Chiste", "Chiste")
                        .WithMany("ChisteTematicas")
                        .HasForeignKey("ChisteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("retoSquadmakers.Models.Tematica", "Tematica")
                        .WithMany("ChisteTematicas")
                        .HasForeignKey("TematicaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chiste");

                    b.Navigation("Tematica");
                });

            modelBuilder.Entity("retoSquadmakers.Models.Chiste", b =>
                {
                    b.Navigation("ChisteTematicas");
                });

            modelBuilder.Entity("retoSquadmakers.Models.Tematica", b =>
                {
                    b.Navigation("ChisteTematicas");
                });

            modelBuilder.Entity("retoSquadmakers.Models.Usuario", b =>
                {
                    b.Navigation("Chistes");
                });
#pragma warning restore 612, 618
        }
    }
}
